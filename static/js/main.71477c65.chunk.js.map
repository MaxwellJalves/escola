{"version":3,"sources":["uteis/styleGlobal.ts","componets/card-contato/style.ts","componets/card-contato/CardContato.tsx","uteis/conversor.tsx","componets/menu/style.ts","componets/menu/Menu.tsx","pages/Contato.tsx","componets/slide/style.ts","componets/slide/SlideInformativo.tsx","componets/slide/SlidePrincipal.tsx","pages/Home.tsx","componets/galeria-v2/galeria-style.ts","assets/images/arrow-left.svg","assets/images/arrow-right.svg","assets/images/zoom.svg","componets/galeria-v2/Galeria-v2.tsx","pages/Informativo.tsx","pages/Sobre.tsx","router.tsx","App.tsx","index.tsx"],"names":["Cor","Fonte","Titulo","styled","h1","Container","div","TextoContato","span","CardContato","us","texto","separador","tipo","usuario","id","nome","contato","split","map","t","toUpperCase","slice","toLowerCase","join","telefone","whatsapp","email","Menu","to","retorno","Contato","contatos","m","ContainerSlide","ContainerSlideIndormativo","SlideInformativo","Slide","Home","style","border","margin","responsivo","cores","GridColumn","ContainerGaleria","ImagemCentral","ImgSlide","img","ImgSlideMini","props","src","Seta","Zoom","Exit","button","ContainerDivImgMini","GaleriaV2","useState","index","setIndex","quantidade_maxima","data","length","exibirImagem","posicao","undefined","imagemAnterior","proximaImagem","Error","onClick","document","exitFullscreen","className","LEFT","alt","url","RIGHT","descricao","galeria","querySelector","requestFullscreen","telaCheia","ZOOM","Informativo","Sobre","Rotas","path","element","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.71477c65.chunk.js","sourcesContent":["export const Cor = {\r\n  branco: 'white',\r\n  preto: 'black',\r\n  cinza: '#6E7076',\r\n  laranja: '#FFA500',\r\n  turqueza: '#2cd4d9',\r\n  cordefundo: '#533edd',\r\n  themegradiente: ' linear-gradient(to right,#2cd4d9,#533edd)',\r\n  themegradienteCinza: 'linear-gradient(to bottom right, #737373, #434343);',\r\n}\r\n\r\nexport const Fonte = {\r\n  roboto500: 'Roboto, sans-serif',\r\n  thin100: 'Zen Kaku Gothic Antique, sans-serif',\r\n}\r\n\r\nexport const MediaQuery = {\r\n  mobile_80x768: '(min-width:80px) and (max-width:768px)',\r\n}\r\n","import styled from 'styled-components'\r\nimport { Cor, Fonte } from '../../uteis/styleGlobal'\r\n\r\nconst FonteParagrafo = `  font-size: 20px;\r\nfont-weight: 500;\r\nfont-style: normal;\r\nfont-family: Tahoma;`\r\nexport const Titulo = styled.h1`\r\n  font-size: 39;\r\n  font-family: ${Fonte.thin100};\r\n  color: ${Cor.branco};\r\n  display: flex;\r\n  @media (min-width: 280px) and (max-width: 1220px) {\r\n    font-size: 28px;\r\n    font-size: 500;\r\n    justify-content: center;\r\n  }\r\n`\r\n\r\nexport const Container = styled.div`\r\n<<<<<<< HEAD\r\n  margin: 24px auto;\r\n  height: 20vh;\r\n  width: 90vh;\r\n\r\n  border-radius: 12px;\r\n\r\n  padding: 2px 4px;\r\n\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-row: repeat(3, 1fr);\r\n\r\n  color: ${Cor.branco};\r\n  @media (min-width: 80px) and (max-width: 760px) {\r\n    width: 84vw;\r\n    grid-template-columns: repeat(1, 1fr);\r\n    grid-row: repeat(1, 250px);\r\n=======\r\n  background: ${Cor.themegradiente};\r\n  border-radius: 12px;\r\n\r\n  margin: 24px 160px;\r\n  display: grid;\r\n\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-auto-rows: 250px 200px 250px;\r\n  align-items: center;\r\n\r\n  @media (min-width: 280px) and (max-width: 1220px) {\r\n    grid-template-columns: 1fr;\r\n    grid-auto-rows: 1fr;\r\n    margin: 24px 24px;\r\n    padding-bottom: 20px;\r\n    align-items: center;\r\n>>>>>>> development\r\n  }\r\n\r\n  background: ${Cor.themegradiente};\r\n`\r\n\r\nexport const TextoContato = styled.span`\r\n  display: flex;\r\n<<<<<<< HEAD\r\n  justify-content: flex-start;\r\n  ${FonteParagrafo}\r\n=======\r\n  color: white;\r\n  justify-content: start;\r\n\r\n  height: 20px;\r\n  padding: 5px;\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n  font-style: normal;\r\n  font-family: Tahoma;\r\n>>>>>>> development\r\n`\r\n","//definir o tipo do componente\r\n\r\nimport * as I from '../../types'\r\nimport * as S from './style'\r\nimport * as C from '../../uteis/conversor'\r\ntype TipeUsuario = {\r\n  tipo: I.IUsuario\r\n}\r\n\r\nconst CardContato = (us: TipeUsuario) => {\r\n  let { id, nome, contato } = us.tipo.usuario\r\n\r\n  return (\r\n    <S.Container>\r\n      <S.Titulo>Contato</S.Titulo>\r\n      <div>\r\n        <S.TextoContato> Código: {id}</S.TextoContato>\r\n        <S.TextoContato>\r\n          {' '}\r\n          Nome: {C.conversorCamelCase(nome,' ')}\r\n        </S.TextoContato>\r\n      </div>\r\n      <span>\r\n        <ul>\r\n          <li>\r\n            <S.TextoContato>Telefone : {contato?.telefone}</S.TextoContato>\r\n          </li>\r\n          <li>\r\n            <S.TextoContato>Whatsapp : {contato?.whatsapp}</S.TextoContato>\r\n          </li>\r\n          <li>\r\n            <S.TextoContato>E-mail : {contato?.email}</S.TextoContato>\r\n          </li>\r\n        </ul>\r\n      </span>\r\n    </S.Container>\r\n  )\r\n}\r\n\r\nexport default CardContato\r\n","\r\n/** @description\r\n *  Função recebe um texto e um dos separadores previstos e retorna uma string com a formatação camelCase\r\n */\r\nexport const conversorCamelCase = (texto : string , separador : ' ') =>{\r\n\r\n  return texto.split(separador)\r\n              .map((t) => t[0].toUpperCase() +  t.slice(1).toLowerCase())\r\n              .join(separador)\r\n}\r\n","import styled from 'styled-components'\r\nimport { Cor, Fonte } from '../../uteis/styleGlobal'\r\n\r\nexport const Container = styled.div`\r\n  min-width: 280px;\r\n  height: 60px;\r\n\r\n  background: ${Cor.themegradiente};\r\n  border-radius: 3px;\r\n  padding: 0px 24px;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  justify-content: end;\r\n\r\n  section {\r\n    width: 600px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n  a {\r\n    font-family: Tahoma;\r\n    font-size: 24px;\r\n    font-style: normal;\r\n    text-decoration: none;\r\n    color: ${Cor.branco};\r\n    padding: 10px;\r\n  }\r\n\r\n  a:hover {\r\n    background-color: rgba(5, 5, 5, 0.2);\r\n    border-radius: 8px;\r\n  }\r\n\r\n  @media (min-width: 80px) and (max-width: 760px) {\r\n    min-width: 292px;\r\n    section {\r\n      width: 292px;\r\n      display: flex;\r\n      max-width: 296px;\r\n    }\r\n    a {\r\n      font-family: ${Fonte.roboto500};\r\n      font-size: 14px;\r\n      font-style: bold;\r\n      text-decoration: none;\r\n      color: ${Cor.branco};\r\n      padding: 10px;\r\n    }\r\n    min-width: 280px;\r\n  }\r\n`\r\n","import { Link } from \"react-router-dom\";\r\nimport { Container } from \"./style\";\r\n\r\nconst Menu = () => {\r\n  return (\r\n    <>\r\n      <Container>\r\n        <section>\r\n          <Link to=\"/\">Home</Link>\r\n          <Link to=\"/informativo\">Informações</Link>\r\n          <Link to=\"/sobre\">Sobre</Link>\r\n          <Link to=\"/contato\">Contato</Link>\r\n        </section>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import CardContato from '../componets/card-contato/CardContato'\r\nimport Menu from '../componets/menu/Menu'\r\nimport Mock from '../mock/Contato.json'\r\nimport * as I from '../types'\r\n\r\nlet retorno: I.IListaDeContatos = Mock\r\n\r\nconst Contato = () => {\r\n  return (\r\n    <>\r\n      <Menu />\r\n      {retorno.contatos.map(m => (\r\n        <CardContato tipo={m} />\r\n      ))}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Contato\r\n","import styled from 'styled-components'\r\nimport { Cor } from '../../uteis/styleGlobal'\r\n\r\nexport const ContainerSlide = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: ${Cor.turqueza};\r\n  font-size: 55px;\r\n\r\n  min-width: 720px;\r\n  min-height: 500px;\r\n  margin: 24px 160px;\r\n  border-radius: 4px;\r\n\r\n  background: ${Cor.themegradienteCinza};\r\n\r\n  @media (min-width: 80px) and (max-width: 760px) {\r\n    min-width: 280px;\r\n    min-height: 300px;\r\n    margin: 24px 24px;\r\n  }\r\n`\r\n\r\nexport const ContainerSlideIndormativo = styled(ContainerSlide)`\r\n  min-height: 300px;\r\n  background: ${Cor.themegradiente};\r\n  color: ${Cor.branco};\r\n`\r\n","import { ContainerSlideIndormativo } from './style'\r\n\r\nconst SlideInformativo = () => {\r\n  return (\r\n    <>\r\n      <ContainerSlideIndormativo>...</ContainerSlideIndormativo>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SlideInformativo\r\n","import { ContainerSlide } from './style'\r\n\r\nconst Slide = () => {\r\n  return (\r\n    <>\r\n      <ContainerSlide>...</ContainerSlide>\r\n    </>\r\n  )\r\n}\r\nexport default Slide\r\n","import Menu from '../componets/menu/Menu'\r\nimport SlideInformativo from '../componets/slide/SlideInformativo'\r\nimport Slide from '../componets/slide/SlidePrincipal'\r\nimport { Cor } from '../uteis/styleGlobal'\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <Menu />\r\n      <Slide />\r\n      <hr style={{ border: '0.1px solid' + Cor.cinza, margin: '24px 160px' }} />\r\n      <SlideInformativo />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import styled from 'styled-components'\r\n\r\nconst responsivo = {\r\n  mobile: ' (min-width: 280px) and (max-width: 768px)',\r\n}\r\n\r\nconst cores = {\r\n  corbgc: '#34495E',\r\n  cortc: '#496684',\r\n  cinza_escuro: '#7F8C8D',\r\n  cinza_escuro_rgb: 'rgb(149, 165, 166)',\r\n  laranja_carot: 'rgb(230, 126, 34)',\r\n}\r\n\r\nexport const GridColumn = styled.div`\r\n  width: 100%;\r\n  height: 800px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  @media ${responsivo.mobile} {\r\n    max-width: 320px;\r\n    margin: 24px 24px;\r\n    width: calc(100vw -148px);\r\n    height: auto;\r\n  }\r\n`\r\n\r\nexport const ContainerGaleria = styled.div`\r\n  * {\r\n    margin: 0;\r\n    padding: 0px;\r\n  }\r\n\r\n  width: 72vw;\r\n  height: 556px;\r\n  display: flex;\r\n  overflow: hidden;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n\r\n  button {\r\n    width: 100%;\r\n  }\r\n\r\n  @media ${responsivo.mobile} {\r\n    max-width: 320px;\r\n    width: 100vw;\r\n    max-height: 280px;\r\n  }\r\n`\r\nexport const ImagemCentral = styled.div`\r\n  border-radius: 12px;\r\n  width: 644px;\r\n  height: 456px;\r\n  max-width: 944px;\r\n\r\n  overflow: hidden;\r\n\r\n  :fullscreen {\r\n    background-color: red;\r\n  }\r\n  @media ${responsivo.mobile} {\r\n    display: flex;\r\n    margin-left: -24px;\r\n    margin-right: -24px;\r\n    width: 320px;\r\n    height: calc(100vh - 38px);\r\n  }\r\n`\r\n\r\nexport const ImgSlide = styled.img`\r\n  width: 644px;\r\n  height: 456px;\r\n\r\n  @media screen and (max-width: 1440px) {\r\n    width: 100%;\r\n    heigth: 80vh;\r\n  }\r\n  @media ${responsivo.mobile} {\r\n    max-width: 320px;\r\n\r\n    width: 100%;\r\n    object-fit: contain;\r\n    height: auto;\r\n    border-radius: 12px;\r\n\r\n    border: 1px;\r\n    padding: 0px;\r\n    margin: 0px;\r\n  }\r\n`\r\n\r\nexport const ImgSlideMini = styled.img`\r\n  src: ${props => (props.src ? props.src : props.src)};\r\n  width: 180px;\r\n  height: 90px;\r\n  gap: 2px;\r\n  object-fit: cover;\r\n  align-self: center;\r\n  cursor: pointer;\r\n  :hover {\r\n    background: rgba(0, 122, 0, 0.5);\r\n  }\r\n`\r\n\r\nexport const Seta = styled.span`\r\n  border: 1px solid white;\r\n  border-radius: 50px;\r\n  cursor: pointer;\r\n  img {\r\n    border-radius: 50px;\r\n    display: flex;\r\n    color: white;\r\n    width: 21px;\r\n    height: 40px;\r\n\r\n    padding: 20px;\r\n  }\r\n\r\n  img:hover {\r\n    background-color: rgba(255, 255, 255, 0.5);\r\n  }\r\n  @media ${responsivo.mobile} {\r\n    display: flex;\r\n    position: relative;\r\n\r\n    img {\r\n      flex: 1;\r\n      padding: 0px;\r\n      margin: 0px;\r\n      border: none;\r\n    }\r\n  }\r\n`\r\n\r\nexport const Zoom = styled.span`\r\n  margin: 0 auto;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 60px;\r\n  max-width: 120px;\r\n  height: 18px;\r\n\r\n  border-radius: 12px;\r\n\r\n  padding: 30px;\r\n  border: 1px solid ${cores.cinza_escuro_rgb};\r\n  font-family: 'Zen Kaku Gothic Antique, sans-serif';\r\n  color: ${cores.cinza_escuro_rgb};\r\n\r\n  background-color: white;\r\n\r\n  @media ${responsivo.mobile} {\r\n    padding: 10px 50px;\r\n    align-self: left;\r\n    width: auto;\r\n    border: 1px solid linear-gradient(red, orange);\r\n  }\r\n`\r\nexport const Exit = styled.button`\r\n  display: none;\r\n\r\n  :fullscreen {\r\n    padding: 25px;\r\n    margin-right: 150px;\r\n    align-self: flex-end;\r\n    display: flex;\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    border: none;\r\n    background: transparent;\r\n    color: white;\r\n    :hover {\r\n      border-radius: 45px;\r\n      background: rgba(80, 10, 90, 0.9);\r\n    }\r\n  }\r\n  @media screen and (display-mode: fullscreen), (device-width: fullscreen) {\r\n    padding: 25px;\r\n    margin-right: 150px;\r\n    align-self: flex-end;\r\n    display: flex;\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    border: none;\r\n    background: transparent;\r\n    color: white;\r\n  }\r\n  :hover {\r\n    border-radius: 45px;\r\n    background: rgba(80, 10, 90, 0.9);\r\n  }\r\n`\r\n\r\nexport const SegundoContainer = styled.div`\r\n  margin-top: 60px;\r\n  width: 320px;\r\n  height: 556px;\r\n  border: 1px solid ${cores.cinza_escuro_rgb};\r\n`\r\n\r\nexport const ContainerDivImgMini = styled.div`\r\n  display: flex;\r\n  gap: 5px;\r\n  @media ${responsivo.mobile} {\r\n    height: 120px;\r\n    overflow-x: scroll;\r\n    scroll-behavior: smooth;\r\n    width: 290px;\r\n    ::-webkit-scrollbar {\r\n      width: 100%;\r\n      height: 5px;\r\n      touch-action: cross-slide-x;\r\n      background-color: transparent;\r\n    }\r\n    ::-webkit-scrollbar-thumb {\r\n      background: linear-gradient(to right, orange, red, blueviolet);\r\n      touch-action: cross-slide-x;\r\n      border-radius: 10px;\r\n      width: 10px;\r\n    }\r\n  }\r\n`\r\n","export default __webpack_public_path__ + \"static/media/arrow-left.10ce0dcc.svg\";","export default __webpack_public_path__ + \"static/media/arrow-right.96f7b437.svg\";","export default __webpack_public_path__ + \"static/media/zoom.fa4ab80e.svg\";","import './stylecss.css'\r\n\r\nimport * as data from '../../mock/Imagens.json'\r\nimport {\r\n  ContainerGaleria,\r\n  Exit,\r\n  ImagemCentral,\r\n  ImgSlide,\r\n  Seta,\r\n  Zoom,\r\n  ImgSlideMini,\r\n  GridColumn,\r\n  ContainerDivImgMini,\r\n} from './galeria-style'\r\nimport LEFT from '../../assets/images/arrow-left.svg'\r\nimport RIGHT from '../../assets/images/arrow-right.svg'\r\nimport ZOOM from '../../assets/images/zoom.svg'\r\n\r\nimport { useState } from 'react'\r\n\r\nconst GaleriaV2 = () => {\r\n  let [index, setIndex] = useState<number>(0)\r\n  let quantidade_maxima = data.imagens.length\r\n\r\n  const telaCheia = () => {\r\n    let galeria = document.querySelector('#galeria-id')\r\n    galeria?.requestFullscreen()\r\n  }\r\n  /** PENDENTE Verificar o erro de type para todos os navegadores */\r\n  const fecharTelaCheia = () => {\r\n    return document.exitFullscreen()\r\n  }\r\n\r\n  const imagemAnterior = (posicao: number) => {\r\n    if (posicao < 0 || posicao === 0 || posicao === undefined) {\r\n      return setIndex(0)\r\n    }\r\n    if (posicao > 0) {\r\n      return setIndex(index - 1)\r\n    }\r\n  }\r\n  const proximaImagem = (posicao: number) => {\r\n    if (posicao > quantidade_maxima - 1 || posicao === undefined) {\r\n      return setIndex(quantidade_maxima - 1)\r\n    }\r\n    if (posicao < quantidade_maxima - 1) {\r\n      return setIndex(index + 1)\r\n    }\r\n  }\r\n  const exibirImagem = (posicao: string) => {\r\n    switch (posicao) {\r\n      case 'esquerda':\r\n        return imagemAnterior(index)\r\n      case 'direita':\r\n        return proximaImagem(index)\r\n      default:\r\n        throw Error('Opção invalida')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <GridColumn id='galeria-id'>\r\n        <Exit id='sair' onClick={() => fecharTelaCheia()}>\r\n          X{' '}\r\n        </Exit>\r\n        <ContainerGaleria>\r\n          <Seta\r\n            className='seta'\r\n            onClick={() => {\r\n              exibirImagem('esquerda')\r\n            }}>\r\n            <img src={LEFT} alt='esquerda' />\r\n          </Seta>\r\n          <ImagemCentral>\r\n            <ImgSlide src={data.imagens[index].url} />\r\n          </ImagemCentral>\r\n          <Seta className='seta' onClick={() => exibirImagem('direita')}>\r\n            <img src={RIGHT} alt='direita' />\r\n          </Seta>\r\n        </ContainerGaleria>\r\n        <ContainerDivImgMini>\r\n          {data.imagens.map(({ id, url, descricao }) => (\r\n            <ImgSlideMini\r\n              src={url}\r\n              key={id}\r\n              alt={descricao}\r\n              onClick={() => setIndex(id - 1)}\r\n            />\r\n          ))}\r\n        </ContainerDivImgMini>\r\n      </GridColumn>\r\n      <Zoom onClick={() => telaCheia()}>\r\n        <img src={ZOOM} alt='' /> zoom\r\n      </Zoom>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GaleriaV2\r\n","import GaleriaV2 from '../componets/galeria-v2/Galeria-v2'\r\nimport Menu from '../componets/menu/Menu'\r\n\r\nconst Informativo = () => {\r\n  return (\r\n    <>\r\n      {' '}\r\n      <Menu />\r\n      <GaleriaV2 />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Informativo\r\n","import Menu from \"../componets/menu/Menu\";\r\n\r\nconst Sobre = () => {\r\n  return (\r\n    <>\r\n      {\" \"}\r\n      <Menu />\r\n      <p>Sobre</p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sobre;\r\n","import { Routes, Route } from 'react-router-dom'\r\nimport Contato from './pages/Contato'\r\nimport Home from './pages/Home'\r\nimport Informativo from './pages/Informativo'\r\nimport Sobre from './pages/Sobre'\r\n\r\nconst Rotas = () => {\r\n  return (\r\n    <Routes>\r\n      <Route path='/' element={<Home />} />\r\n      <Route path='/escola' element={<Home />} />\r\n      <Route path='/informativo' element={<Informativo />} />\r\n      <Route path='/sobre' element={<Sobre />} />\r\n      <Route path='/contato' element={<Contato />} />\r\n    </Routes>\r\n  )\r\n}\r\n\r\nexport default Rotas\r\n","import Rotas from './router'\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Rotas />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}